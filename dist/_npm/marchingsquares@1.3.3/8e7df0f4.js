/**
 * Bundled by jsDelivr using Rollup v2.79.1 and Terser v5.19.2.
 * Original file: /npm/marchingsquares@1.3.3/dist/marchingsquares-esm.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
/*!
* MarchingSquaresJS
* version 1.3.3
* https://github.com/RaumZeit/MarchingSquares.js
*
* @license GNU Affero General Public License.
* Copyright (c) 2015-2019 Ronny Lorenz <ronny@tbi.univie.ac.at>
*/
function e(e,t,n){return e<t?(n-e)/(t-e):(e-n)/(e-t)}function t(e,t,n,o){var r;return n>o&&(r=n,n=o,o=r),e<t?e<n?(n-e)/(t-e):(o-e)/(t-e):e>o?(e-o)/(e-t):(e-n)/(e-t)}function n(e,t,n,o){return e<t?(n-e)/(t-e):(e-o)/(e-t)}function o(e,t,n,o){return e<t?(o-e)/(t-e):(e-n)/(e-t)}function r(){this.successCallback=null,this.verbose=!1,this.polygons=!1,this.polygons_full=!1,this.linearRing=!0,this.noQuadTree=!1,this.noFrame=!1}function a(e,t,n,o){var r=[];return e.polygons.forEach((function(e){e.forEach((function(e){e[0]+=t,e[1]+=n})),o.linearRing&&e.push(e[0]),r.push(e)})),r}function l(e,t,n,o){return 0===n?(e+=1,t+=o[0][1]):1===n?e+=o[0][0]:2===n?t+=o[0][1]:3===n&&(e+=o[0][0],t+=1),[e,t]}function i(e,t,n){return 0===n?e++:1===n||(2===n?t++:3===n&&(e++,t++)),[e,t]}function s(e,t,n,o,r){var a=o,l=r,i=0,p=0;if(this.x=t,this.y=n,this.lowerBound=null,this.upperBound=null,this.childA=null,this.childB=null,this.childC=null,this.childD=null,1===o&&1===r)this.lowerBound=Math.min(e[n][t],e[n][t+1],e[n+1][t+1],e[n+1][t]),this.upperBound=Math.max(e[n][t],e[n][t+1],e[n+1][t+1],e[n+1][t]);else{if(o>1){for(;0!==a;)a>>=1,i++;o===1<<i-1&&i--,a=1<<i-1}if(r>1){for(;0!==l;)l>>=1,p++;r===1<<p-1&&p--,l=1<<p-1}this.childA=new s(e,t,n,a,l),this.lowerBound=this.childA.lowerBound,this.upperBound=this.childA.upperBound,o-a>0&&(this.childB=new s(e,t+a,n,o-a,l),this.lowerBound=Math.min(this.lowerBound,this.childB.lowerBound),this.upperBound=Math.max(this.upperBound,this.childB.upperBound),r-l>0&&(this.childC=new s(e,t+a,n+l,o-a,r-l),this.lowerBound=Math.min(this.lowerBound,this.childC.lowerBound),this.upperBound=Math.max(this.upperBound,this.childC.upperBound))),r-l>0&&(this.childD=new s(e,t,n+l,a,r-l),this.lowerBound=Math.min(this.lowerBound,this.childD.lowerBound),this.upperBound=Math.max(this.upperBound,this.childD.upperBound))}}function p(e){var t,n;if(!e)throw new Error("data is required");if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Error("data must be scalar field, i.e. array of arrays");if(e.length<2)throw new Error("data must contain at least two rows");if((n=e[0].length)<2)throw new Error("data must contain at least two columns");for(t=1;t<e.length;t++){if(!Array.isArray(e[t]))throw new Error("Row "+t+" is not an array");if(e[t].length!=n)throw new Error("unequal row lengths detected, please provide a regular grid")}this.data=e,this.root=new s(e,0,0,e[0].length-1,e.length-1)}function g(t,n,o){var s,g,m,u=!1,b=!1,c=null,y=null,_=null,d=null,f=null,V=[];if(!t)throw new Error("data is required");if(null==n)throw new Error("threshold is required");if(o&&"object"!=typeof o)throw new Error("options must be an object");if(s=function(t){var n,o,a,l,i;for(l=new r,t=t||{},i=Object.keys(l),n=0;n<i.length;n++)null!=(a=t[o=i[n]])&&(l[o]=a);return l.polygons_full=!l.polygons,l.interpolate=e,l}(o),t instanceof p)c=t,y=t.root,_=t.data,s.noQuadTree||(u=!0);else{if(!Array.isArray(t)||!Array.isArray(t[0]))throw new Error("input is neither array of arrays nor object retrieved from 'QuadTree()'");_=t}if(Array.isArray(n)){for(b=!0,s.noQuadTree||(u=!0),g=0;g<n.length;g++)if(isNaN(+n[g]))throw new Error("threshold["+g+"] is not a number")}else{if(isNaN(+n))throw new Error("threshold must be a number or array of numbers");n=[n]}return u&&!y&&(c=new p(_),y=c.root,_=c.data),s.verbose&&(s.polygons?console.log("MarchingSquaresJS-isoLines: returning single lines (polygons) for each grid cell"):console.log("MarchingSquaresJS-isoLines: returning line paths (polygons) for entire data grid"),b&&console.log("MarchingSquaresJS-isoLines: multiple lines requested, returning array of line paths instead of lines for a single threshold")),n.forEach((function(e,t){if(f=[],s.threshold=e,s.verbose&&console.log("MarchingSquaresJS-isoLines: computing iso lines for threshold "+e),s.polygons)if(u)y.cellsBelowThreshold(s.threshold,!0).forEach((function(e){f=f.concat(a(h(_,e.x,e.y,s),e.x,e.y,s))}));else for(m=0;m<_.length-1;++m)for(t=0;t<_[0].length-1;++t)f=f.concat(a(h(_,t,m,s),t,m,s));else{for(d=[],t=0;t<_[0].length-1;++t)d[t]=[];if(u)y.cellsBelowThreshold(s.threshold,!1).forEach((function(e){d[e.x][e.y]=h(_,e.x,e.y,s)}));else for(t=0;t<_[0].length-1;++t)for(m=0;m<_.length-1;++m)d[t][m]=h(_,t,m,s);f=function(e,t,n){var o,r,a,s,p,g,h,m,u,b,c,y,_,d,f,V=[],x=e.length-1,v=e[0].length-1,k=["right","bottom","left","top"],w=[0,-1,0,1],B=[-1,0,1,0],E={bottom:1,left:2,top:3,right:0};return n.noFrame||function(e,t){var n,o,r,a,l;for(n=!0,o=e[0].length,r=e.length,l=0;l<r;l++)if(e[l][0]>=t||e[l][o-1]>=t){n=!1;break}if(n&&(e[r-1][0]>=t||e[r-1][o-1]>=t)&&(n=!1),n)for(a=0;a<o-1;a++)if(e[0][a]>=t||e[r-1][a]>t){n=!1;break}return n}(e,n.threshold)&&(n.linearRing?V.push([[0,0],[0,x],[v,x],[v,0],[0,0]]):V.push([[0,0],[0,x],[v,x],[v,0]])),t.forEach((function(e,A){e.forEach((function(e,N){for(o=null,r=0;r<4;r++)if(o=k[r],"object"==typeof e.edges[o]){for(p=[],a=e.edges[o],g=o,h=A,m=N,u=!1,b=[A+a.path[0][0],N+a.path[0][1]],p.push(b);!u&&"object"==typeof(s=t[h][m]).edges[g];)if(a=s.edges[g],delete s.edges[g],(c=a.path[1])[0]+=h,c[1]+=m,p.push(c),g=a.move.enter,h+=a.move.x,m+=a.move.y,void 0===t[h]||void 0===t[h][m]){if(!n.linearRing)break;if(y=0,_=0,h===v?(h--,y=0):h<0?(h++,y=2):m===x?(m--,y=3):m<0&&(m++,y=1),h===A&&m===N&&y===E[o]){u=!0,g=o;break}for(;;){if(d=!1,_>4)throw new Error("Direction change counter overflow! This should never happen!");if(void 0!==t[h]&&void 0!==t[h][m]&&(s=t[h][m],f=k[y],"object"==typeof s.edges[f])){a=s.edges[f],p.push(l(h,m,y,a.path)),g=f,d=!0;break}if(d)break;if(p.push(i(h,m,y)),m+=B[y],void 0!==t[h+=w[y]]&&void 0!==t[h][m]||(0===y&&m<0||1===y&&h<0||2===y&&m===x||3===y&&h===v)&&(h-=w[y],m-=B[y],y=(y+1)%4,_++),h===A&&m===N&&y===E[o]){u=!0,g=o;break}}}!n.linearRing||p[p.length-1][0]===b[0]&&p[p.length-1][1]===b[1]||p.push(b),V.push(p)}}))})),V}(_,d,s)}b?V.push(f):V=f,"function"==typeof s.successCallback&&s.successCallback(V,e)})),V}function h(e,t,n,o){var r,a,l,i,s,p,g=0,h=e[n+1][t],m=e[n+1][t+1],u=e[n][t+1],b=e[n][t],c=o.threshold;if(!(isNaN(b)||isNaN(u)||isNaN(m)||isNaN(h))){switch(g|=h>=c?8:0,g|=m>=c?4:0,g|=u>=c?2:0,p={cval:g=+(g|=b>=c?1:0),polygons:[],edges:{},x0:b,x1:u,x2:m,x3:h},g){case 0:o.polygons&&p.polygons.push([[0,0],[0,1],[1,1],[1,0]]);break;case 15:break;case 14:r=o.interpolate(b,h,c),i=o.interpolate(b,u,c),o.polygons_full&&(p.edges.left={path:[[0,r],[i,0]],move:{x:0,y:-1,enter:"top"}}),o.polygons&&p.polygons.push([[0,0],[0,r],[i,0]]);break;case 13:i=o.interpolate(b,u,c),a=o.interpolate(u,m,c),o.polygons_full&&(p.edges.bottom={path:[[i,0],[1,a]],move:{x:1,y:0,enter:"left"}}),o.polygons&&p.polygons.push([[i,0],[1,a],[1,0]]);break;case 11:a=o.interpolate(u,m,c),l=o.interpolate(h,m,c),o.polygons_full&&(p.edges.right={path:[[1,a],[l,1]],move:{x:0,y:1,enter:"bottom"}}),o.polygons&&p.polygons.push([[1,a],[l,1],[1,1]]);break;case 7:r=o.interpolate(b,h,c),l=o.interpolate(h,m,c),o.polygons_full&&(p.edges.top={path:[[l,1],[0,r]],move:{x:-1,y:0,enter:"right"}}),o.polygons&&p.polygons.push([[l,1],[0,r],[0,1]]);break;case 1:r=o.interpolate(b,h,c),i=o.interpolate(b,u,c),o.polygons_full&&(p.edges.bottom={path:[[i,0],[0,r]],move:{x:-1,y:0,enter:"right"}}),o.polygons&&p.polygons.push([[i,0],[0,r],[0,1],[1,1],[1,0]]);break;case 2:i=o.interpolate(b,u,c),a=o.interpolate(u,m,c),o.polygons_full&&(p.edges.right={path:[[1,a],[i,0]],move:{x:0,y:-1,enter:"top"}}),o.polygons&&p.polygons.push([[0,0],[0,1],[1,1],[1,a],[i,0]]);break;case 4:a=o.interpolate(u,m,c),l=o.interpolate(h,m,c),o.polygons_full&&(p.edges.top={path:[[l,1],[1,a]],move:{x:1,y:0,enter:"left"}}),o.polygons&&p.polygons.push([[0,0],[0,1],[l,1],[1,a],[1,0]]);break;case 8:r=o.interpolate(b,h,c),l=o.interpolate(h,m,c),o.polygons_full&&(p.edges.left={path:[[0,r],[l,1]],move:{x:0,y:1,enter:"bottom"}}),o.polygons&&p.polygons.push([[0,0],[0,r],[l,1],[1,1],[1,0]]);break;case 12:r=o.interpolate(b,h,c),a=o.interpolate(u,m,c),o.polygons_full&&(p.edges.left={path:[[0,r],[1,a]],move:{x:1,y:0,enter:"left"}}),o.polygons&&p.polygons.push([[0,0],[0,r],[1,a],[1,0]]);break;case 9:i=o.interpolate(b,u,c),l=o.interpolate(h,m,c),o.polygons_full&&(p.edges.bottom={path:[[i,0],[l,1]],move:{x:0,y:1,enter:"bottom"}}),o.polygons&&p.polygons.push([[i,0],[l,1],[1,1],[1,0]]);break;case 3:r=o.interpolate(b,h,c),a=o.interpolate(u,m,c),o.polygons_full&&(p.edges.right={path:[[1,a],[0,r]],move:{x:-1,y:0,enter:"right"}}),o.polygons&&p.polygons.push([[0,r],[0,1],[1,1],[1,a]]);break;case 6:i=o.interpolate(b,u,c),l=o.interpolate(h,m,c),o.polygons_full&&(p.edges.top={path:[[l,1],[i,0]],move:{x:0,y:-1,enter:"top"}}),o.polygons&&p.polygons.push([[0,0],[0,1],[l,1],[i,0]]);break;case 10:r=o.interpolate(b,h,c),a=o.interpolate(u,m,c),i=o.interpolate(b,u,c),l=o.interpolate(h,m,c),s=(b+u+m+h)/4,o.polygons_full&&(s<c?(p.edges.left={path:[[0,r],[l,1]],move:{x:0,y:1,enter:"bottom"}},p.edges.right={path:[[1,a],[i,0]],move:{x:0,y:-1,enter:"top"}}):(p.edges.right={path:[[1,a],[l,1]],move:{x:0,y:1,enter:"bottom"}},p.edges.left={path:[[0,r],[i,0]],move:{x:0,y:-1,enter:"top"}})),o.polygons&&(s<c?p.polygons.push([[0,0],[0,r],[l,1],[1,1],[1,a],[i,0]]):(p.polygons.push([[0,0],[0,r],[i,0]]),p.polygons.push([[l,1],[1,1],[1,a]])));break;case 5:r=o.interpolate(b,h,c),a=o.interpolate(u,m,c),i=o.interpolate(b,u,c),l=o.interpolate(h,m,c),s=(b+u+m+h)/4,o.polygons_full&&(s<c?(p.edges.bottom={path:[[i,0],[0,r]],move:{x:-1,y:0,enter:"right"}},p.edges.top={path:[[l,1],[1,a]],move:{x:1,y:0,enter:"left"}}):(p.edges.top={path:[[l,1],[0,r]],move:{x:-1,y:0,enter:"right"}},p.edges.bottom={path:[[i,0],[1,a]],move:{x:1,y:0,enter:"left"}})),o.polygons&&(s<c?p.polygons.push([[0,r],[0,1],[l,1],[1,a],[1,0],[i,0]]):(p.polygons.push([[0,r],[0,1],[l,1]]),p.polygons.push([[i,0],[1,a],[1,0]])))}return p}}s.prototype.cellsInBand=function(e,t,n){var o=[];return n=void 0===n||n,this.lowerBound>t||this.upperBound<e||(this.childA||this.childB||this.childC||this.childD?(this.childA&&(o=o.concat(this.childA.cellsInBand(e,t,n))),this.childB&&(o=o.concat(this.childB.cellsInBand(e,t,n))),this.childD&&(o=o.concat(this.childD.cellsInBand(e,t,n))),this.childC&&(o=o.concat(this.childC.cellsInBand(e,t,n)))):(n||this.lowerBound<=e||this.upperBound>=t)&&o.push({x:this.x,y:this.y})),o},s.prototype.cellsBelowThreshold=function(e,t){var n=[];return t=void 0===t||t,this.lowerBound>e||(this.childA||this.childB||this.childC||this.childD?(this.childA&&(n=n.concat(this.childA.cellsBelowThreshold(e,t))),this.childB&&(n=n.concat(this.childB.cellsBelowThreshold(e,t))),this.childD&&(n=n.concat(this.childD.cellsBelowThreshold(e,t))),this.childC&&(n=n.concat(this.childC.cellsBelowThreshold(e,t)))):(t||this.upperBound>=e)&&n.push({x:this.x,y:this.y})),n};var m={square:function(e,t,n,o,r,a){a.polygons&&e.polygons.push([[0,0],[0,1],[1,1],[1,0]])},triangle_bl:function(e,t,n,o,r,a){var l=a.interpolate(t,n,a.minV,a.maxV),i=a.interpolate(t,r,a.minV,a.maxV);a.polygons_full&&(e.edges.lb={path:[[0,i],[l,0]],move:{x:0,y:-1,enter:"tl"}}),a.polygons&&e.polygons.push([[0,i],[l,0],[0,0]])},triangle_br:function(e,t,n,o,r,a){var l=a.interpolate(t,n,a.minV,a.maxV),i=a.interpolate(n,o,a.minV,a.maxV);a.polygons_full&&(e.edges.br={path:[[l,0],[1,i]],move:{x:1,y:0,enter:"lb"}}),a.polygons&&e.polygons.push([[l,0],[1,i],[1,0]])},triangle_tr:function(e,t,n,o,r,a){var l=a.interpolate(n,o,a.minV,a.maxV),i=a.interpolate(r,o,a.minV,a.maxV);a.polygons_full&&(e.edges.rt={path:[[1,l],[i,1]],move:{x:0,y:1,enter:"br"}}),a.polygons&&e.polygons.push([[1,l],[i,1],[1,1]])},triangle_tl:function(e,t,n,o,r,a){var l=a.interpolate(r,o,a.minV,a.maxV),i=a.interpolate(t,r,a.minV,a.maxV);a.polygons_full&&(e.edges.tl={path:[[l,1],[0,i]],move:{x:-1,y:0,enter:"rt"}}),a.polygons&&e.polygons.push([[0,i],[0,1],[l,1]])},tetragon_t:function(e,t,n,o,r,a){var l=a.interpolate(n,o,a.minV,a.maxV),i=a.interpolate(t,r,a.minV,a.maxV);a.polygons_full&&(e.edges.rt={path:[[1,l],[0,i]],move:{x:-1,y:0,enter:"rt"}}),a.polygons&&e.polygons.push([[0,i],[0,1],[1,1],[1,l]])},tetragon_r:function(e,t,n,o,r,a){var l=a.interpolate(t,n,a.minV,a.maxV),i=a.interpolate(r,o,a.minV,a.maxV);a.polygons_full&&(e.edges.br={path:[[l,0],[i,1]],move:{x:0,y:1,enter:"br"}}),a.polygons&&e.polygons.push([[l,0],[i,1],[1,1],[1,0]])},tetragon_b:function(e,t,n,o,r,a){var l=a.interpolate(t,r,a.minV,a.maxV),i=a.interpolate(n,o,a.minV,a.maxV);a.polygons_full&&(e.edges.lb={path:[[0,l],[1,i]],move:{x:1,y:0,enter:"lb"}}),a.polygons&&e.polygons.push([[0,0],[0,l],[1,i],[1,0]])},tetragon_l:function(e,t,n,o,r,a){var l=a.interpolate(r,o,a.minV,a.maxV),i=a.interpolate(t,n,a.minV,a.maxV);a.polygons_full&&(e.edges.tl={path:[[l,1],[i,0]],move:{x:0,y:-1,enter:"tl"}}),a.polygons&&e.polygons.push([[0,0],[0,1],[l,1],[i,0]])},tetragon_bl:function(e,t,n,o,r,a){var l=a.interpolate_a(t,n,a.minV,a.maxV),i=a.interpolate_b(t,n,a.minV,a.maxV),s=a.interpolate_a(t,r,a.minV,a.maxV),p=a.interpolate_b(t,r,a.minV,a.maxV);a.polygons_full&&(e.edges.bl={path:[[l,0],[0,s]],move:{x:-1,y:0,enter:"rb"}},e.edges.lt={path:[[0,p],[i,0]],move:{x:0,y:-1,enter:"tr"}}),a.polygons&&e.polygons.push([[l,0],[0,s],[0,p],[i,0]])},tetragon_br:function(e,t,n,o,r,a){var l=a.interpolate_a(t,n,a.minV,a.maxV),i=a.interpolate_b(t,n,a.minV,a.maxV),s=a.interpolate_a(n,o,a.minV,a.maxV),p=a.interpolate_b(n,o,a.minV,a.maxV);a.polygons_full&&(e.edges.bl={path:[[l,0],[1,p]],move:{x:1,y:0,enter:"lt"}},e.edges.rb={path:[[1,s],[i,0]],move:{x:0,y:-1,enter:"tr"}}),a.polygons&&e.polygons.push([[l,0],[1,p],[1,s],[i,0]])},tetragon_tr:function(e,t,n,o,r,a){var l=a.interpolate_a(r,o,a.minV,a.maxV),i=a.interpolate_b(r,o,a.minV,a.maxV),s=a.interpolate_b(n,o,a.minV,a.maxV),p=a.interpolate_a(n,o,a.minV,a.maxV);a.polygons_full&&(e.edges.rb={path:[[1,p],[l,1]],move:{x:0,y:1,enter:"bl"}},e.edges.tr={path:[[i,1],[1,s]],move:{x:1,y:0,enter:"lt"}}),a.polygons&&e.polygons.push([[1,p],[l,1],[i,1],[1,s]])},tetragon_tl:function(e,t,n,o,r,a){var l=a.interpolate_a(r,o,a.minV,a.maxV),i=a.interpolate_b(r,o,a.minV,a.maxV),s=a.interpolate_b(t,r,a.minV,a.maxV),p=a.interpolate_a(t,r,a.minV,a.maxV);a.polygons_full&&(e.edges.tr={path:[[i,1],[0,p]],move:{x:-1,y:0,enter:"rb"}},e.edges.lt={path:[[0,s],[l,1]],move:{x:0,y:1,enter:"bl"}}),a.polygons&&e.polygons.push([[i,1],[0,p],[0,s],[l,1]])},tetragon_lr:function(e,t,n,o,r,a){var l=a.interpolate_a(t,r,a.minV,a.maxV),i=a.interpolate_b(t,r,a.minV,a.maxV),s=a.interpolate_b(n,o,a.minV,a.maxV),p=a.interpolate_a(n,o,a.minV,a.maxV);a.polygons_full&&(e.edges.lt={path:[[0,i],[1,s]],move:{x:1,y:0,enter:"lt"}},e.edges.rb={path:[[1,p],[0,l]],move:{x:-1,y:0,enter:"rb"}}),a.polygons&&e.polygons.push([[0,l],[0,i],[1,s],[1,p]])},tetragon_tb:function(e,t,n,o,r,a){var l=a.interpolate_a(r,o,a.minV,a.maxV),i=a.interpolate_b(r,o,a.minV,a.maxV),s=a.interpolate_b(t,n,a.minV,a.maxV),p=a.interpolate_a(t,n,a.minV,a.maxV);a.polygons_full&&(e.edges.tr={path:[[i,1],[s,0]],move:{x:0,y:-1,enter:"tr"}},e.edges.bl={path:[[p,0],[l,1]],move:{x:0,y:1,enter:"bl"}}),a.polygons&&e.polygons.push([[p,0],[l,1],[i,1],[s,0]])},pentagon_tr:function(e,t,n,o,r,a){var l=a.interpolate(r,o,a.minV,a.maxV),i=a.interpolate(n,o,a.minV,a.maxV);a.polygons_full&&(e.edges.tl={path:[[l,1],[1,i]],move:{x:1,y:0,enter:"lb"}}),a.polygons&&e.polygons.push([[0,0],[0,1],[l,1],[1,i],[1,0]])},pentagon_tl:function(e,t,n,o,r,a){var l=a.interpolate(t,r,a.minV,a.maxV),i=a.interpolate(r,o,a.minV,a.maxV);a.polygons_full&&(e.edges.lb={path:[[0,l],[i,1]],move:{x:0,y:1,enter:"br"}}),a.polygons&&e.polygons.push([[0,0],[0,l],[i,1],[1,1],[1,0]])},pentagon_br:function(e,t,n,o,r,a){var l=a.interpolate(t,n,a.minV,a.maxV),i=a.interpolate(n,o,a.minV,a.maxV);a.polygons_full&&(e.edges.rt={path:[[1,i],[l,0]],move:{x:0,y:-1,enter:"tl"}}),a.polygons&&e.polygons.push([[0,0],[0,1],[1,1],[1,i],[l,0]])},pentagon_bl:function(e,t,n,o,r,a){var l=a.interpolate(t,r,a.minV,a.maxV),i=a.interpolate(t,n,a.minV,a.maxV);a.polygons_full&&(e.edges.br={path:[[i,0],[0,l]],move:{x:-1,y:0,enter:"rt"}}),a.polygons&&e.polygons.push([[0,l],[0,1],[1,1],[1,0],[i,0]])},pentagon_tr_rl:function(e,t,n,o,r,a){var l=a.interpolate(t,r,a.minV,a.maxV),i=a.interpolate(r,o,a.minV,a.maxV),s=a.interpolate_b(n,o,a.minV,a.maxV),p=a.interpolate_a(n,o,a.minV,a.maxV);a.polygons_full&&(e.edges.tl={path:[[i,1],[1,s]],move:{x:1,y:0,enter:"lt"}},e.edges.rb={path:[[1,p],[0,l]],move:{x:-1,y:0,enter:"rt"}}),a.polygons&&e.polygons.push([[0,l],[0,1],[i,1],[1,s],[1,p]])},pentagon_rb_bt:function(e,t,n,o,r,a){var l=a.interpolate(n,o,a.minV,a.maxV),i=a.interpolate_b(t,n,a.minV,a.maxV),s=a.interpolate_a(t,n,a.minV,a.maxV),p=a.interpolate(r,o,a.minV,a.maxV);a.polygons_full&&(e.edges.rt={path:[[1,l],[i,0]],move:{x:0,y:-1,enter:"tr"}},e.edges.bl={path:[[s,0],[p,1]],move:{x:0,y:1,enter:"br"}}),a.polygons&&e.polygons.push([[p,1],[1,1],[1,l],[i,0],[s,0]])},pentagon_bl_lr:function(e,t,n,o,r,a){var l=a.interpolate(t,n,a.minV,a.maxV),i=a.interpolate_a(t,r,a.minV,a.maxV),s=a.interpolate_b(t,r,a.minV,a.maxV),p=a.interpolate(n,o,a.minV,a.maxV);a.polygons_full&&(e.edges.br={path:[[l,0],[0,i]],move:{x:-1,y:0,enter:"rb"}},e.edges.lt={path:[[0,s],[1,p]],move:{x:1,y:0,enter:"lb"}}),a.polygons&&e.polygons.push([[l,0],[0,i],[0,s],[1,p],[1,0]])},pentagon_lt_tb:function(e,t,n,o,r,a){var l=a.interpolate(t,r,a.minV,a.maxV),i=a.interpolate_a(r,o,a.minV,a.maxV),s=a.interpolate_b(r,o,a.minV,a.maxV),p=a.interpolate(t,n,a.minV,a.maxV);a.polygons_full&&(e.edges.lb={path:[[0,l],[i,1]],move:{x:0,y:1,enter:"bl"}},e.edges.tr={path:[[s,1],[p,0]],move:{x:0,y:-1,enter:"tl"}}),a.polygons&&e.polygons.push([[0,0],[0,l],[i,1],[s,1],[p,0]])},pentagon_bl_tb:function(e,t,n,o,r,a){var l=a.interpolate(t,r,a.minV,a.maxV),i=a.interpolate(r,o,a.minV,a.maxV),s=a.interpolate_b(t,n,a.minV,a.maxV),p=a.interpolate_a(t,n,a.minV,a.maxV);a.polygons_full&&(e.edges.bl={path:[[p,0],[0,l]],move:{x:-1,y:0,enter:"rt"}},e.edges.tl={path:[[i,1],[s,0]],move:{x:0,y:-1,enter:"tr"}}),a.polygons&&e.polygons.push([[0,l],[0,1],[i,1],[s,0],[p,0]])},pentagon_lt_rl:function(e,t,n,o,r,a){var l=a.interpolate_a(t,r,a.minV,a.maxV),i=a.interpolate_b(t,r,a.minV,a.maxV),s=a.interpolate(r,o,a.minV,a.maxV),p=a.interpolate(n,r,a.minV,a.maxV);a.polygons_full&&(e.edges.lt={path:[[0,i],[s,1]],move:{x:0,y:1,enter:"br"}},e.edges.rt={path:[[1,p],[0,l]],move:{x:-1,y:0,enter:"rb"}}),a.polygons&&e.polygons.push([[0,l],[0,i],[s,1],[1,1],[1,p]])},pentagon_tr_bt:function(e,t,n,o,r,a){var l=a.interpolate_a(r,o,a.minV,a.maxV),i=a.interpolate_b(r,o,a.minV,a.maxV),s=a.interpolate(n,o,a.minV,a.maxV),p=a.interpolate(t,n,a.minV,a.maxV);a.polygons_full&&(e.edges.br={path:[[p,0],[l,1]],move:{x:0,y:1,enter:"bl"}},e.edges.tr={path:[[i,1],[1,s]],move:{x:1,y:0,enter:"lb"}}),a.polygons&&e.polygons.push([[l,1],[i,1],[1,s],[1,0],[p,0]])},pentagon_rb_lr:function(e,t,n,o,r,a){var l=a.interpolate(t,r,a.minV,a.maxV),i=a.interpolate_b(n,o,a.minV,a.maxV),s=a.interpolate_a(n,o,a.minV,a.maxV),p=a.interpolate(t,n,a.minV,a.maxV);a.polygons_full&&(e.edges.lb={path:[[0,l],[1,i]],move:{x:1,y:0,enter:"lt"}},e.edges.rb={path:[[1,s],[p,0]],move:{x:0,y:-1,enter:"tl"}}),a.polygons&&e.polygons.push([[0,0],[0,l],[1,i],[1,s],[p,0]])},hexagon_lt_tr:function(e,t,n,o,r,a){var l=a.interpolate(t,r,a.minV,a.maxV),i=a.interpolate_a(r,o,a.minV,a.maxV),s=a.interpolate_b(r,o,a.minV,a.maxV),p=a.interpolate(n,o,a.minV,a.maxV);a.polygons_full&&(e.edges.lb={path:[[0,l],[i,1]],move:{x:0,y:1,enter:"bl"}},e.edges.tr={path:[[s,1],[1,p]],move:{x:1,y:0,enter:"lb"}}),a.polygons&&e.polygons.push([[0,0],[0,l],[i,1],[s,1],[1,p],[1,0]])},hexagon_bl_lt:function(e,t,n,o,r,a){var l=a.interpolate(t,n,a.minV,a.maxV),i=a.interpolate_a(t,r,a.minV,a.maxV),s=a.interpolate_b(t,r,a.minV,a.maxV),p=a.interpolate(r,o,a.minV,a.maxV);a.polygons_full&&(e.edges.br={path:[[l,0],[0,i]],move:{x:-1,y:0,enter:"rb"}},e.edges.lt={path:[[0,s],[p,1]],move:{x:0,y:1,enter:"br"}}),a.polygons&&e.polygons.push([[l,0],[0,i],[0,s],[p,1],[1,1],[1,0]])},hexagon_bl_rb:function(e,t,n,o,r,a){var l=a.interpolate_a(t,n,a.minV,a.maxV),i=a.interpolate_b(t,n,a.minV,a.maxV),s=a.interpolate(t,r,a.minV,a.maxV),p=a.interpolate(n,o,a.minV,a.maxV);a.polygons_full&&(e.edges.bl={path:[[l,0],[0,s]],move:{x:-1,y:0,enter:"rt"}},e.edges.rt={path:[[1,p],[i,0]],move:{x:0,y:-1,enter:"tr"}}),a.polygons&&e.polygons.push([[l,0],[0,s],[0,1],[1,1],[1,p],[i,0]])},hexagon_tr_rb:function(e,t,n,o,r,a){var l=a.interpolate(t,n,a.minV,a.maxV),i=a.interpolate(r,o,a.minV,a.maxV),s=a.interpolate_b(n,o,a.minV,a.maxV),p=a.interpolate_a(n,o,a.minV,a.maxV);a.polygons_full&&(e.edges.tl={path:[[i,1],[1,s]],move:{x:1,y:0,enter:"lt"}},e.edges.rb={path:[[1,p],[l,0]],move:{x:0,y:-1,enter:"tl"}}),a.polygons&&e.polygons.push([[0,0],[0,1],[i,1],[1,s],[1,p],[l,0]])},hexagon_lt_rb:function(e,t,n,o,r,a){var l=a.interpolate(t,r,a.minV,a.maxV),i=a.interpolate(r,o,a.minV,a.maxV),s=a.interpolate(n,o,a.minV,a.maxV),p=a.interpolate(t,n,a.minV,a.maxV);a.polygons_full&&(e.edges.lb={path:[[0,l],[i,1]],move:{x:0,y:1,enter:"br"}},e.edges.rt={path:[[1,s],[p,0]],move:{x:0,y:-1,enter:"tl"}}),a.polygons&&e.polygons.push([[0,0],[0,l],[i,1],[1,1],[1,s],[p,0]])},hexagon_bl_tr:function(e,t,n,o,r,a){var l=a.interpolate(t,n,a.minV,a.maxV),i=a.interpolate(t,r,a.minV,a.maxV),s=a.interpolate(r,o,a.minV,a.maxV),p=a.interpolate(n,o,a.minV,a.maxV);a.polygons_full&&(e.edges.br={path:[[l,0],[0,i]],move:{x:-1,y:0,enter:"rt"}},e.edges.tl={path:[[s,1],[1,p]],move:{x:1,y:0,enter:"lb"}}),a.polygons&&e.polygons.push([[l,0],[0,i],[0,1],[s,1],[1,p],[1,0]])},heptagon_tr:function(e,t,n,o,r,a){var l=a.interpolate_a(t,n,a.minV,a.maxV),i=a.interpolate_b(t,n,a.minV,a.maxV),s=a.interpolate_a(t,r,a.minV,a.maxV),p=a.interpolate_b(t,r,a.minV,a.maxV),g=a.interpolate(r,o,a.minV,a.maxV),h=a.interpolate(n,o,a.minV,a.maxV);a.polygons_full&&(e.edges.bl={path:[[l,0],[0,s]],move:{x:-1,y:0,enter:"rb"}},e.edges.lt={path:[[0,p],[g,1]],move:{x:0,y:1,enter:"br"}},e.edges.rt={path:[[1,h],[i,0]],move:{x:0,y:-1,enter:"tr"}}),a.polygons&&e.polygons.push([[l,0],[0,s],[0,p],[g,1],[1,1],[1,h],[i,0]])},heptagon_bl:function(e,t,n,o,r,a){var l=a.interpolate(t,n,a.minV,a.maxV),i=a.interpolate(t,r,a.minV,a.maxV),s=a.interpolate_a(r,o,a.minV,a.maxV),p=a.interpolate_b(r,o,a.minV,a.maxV),g=a.interpolate_b(n,o,a.minV,a.maxV),h=a.interpolate_a(n,o,a.minV,a.maxV);a.polygons_full&&(e.edges.lb={path:[[0,i],[s,1]],move:{x:0,y:1,enter:"bl"}},e.edges.tr={path:[[p,1],[1,g]],move:{x:1,y:0,enter:"lt"}},e.edges.rb={path:[[1,h],[l,0]],move:{x:0,y:-1,enter:"tl"}}),a.polygons&&e.polygons.push([[0,0],[0,i],[s,1],[p,1],[1,g],[1,h],[l,0]])},heptagon_tl:function(e,t,n,o,r,a){var l=a.interpolate_a(t,n,a.minV,a.maxV),i=a.interpolate_b(t,n,a.minV,a.maxV),s=a.interpolate(t,r,a.minV,a.maxV),p=a.interpolate(r,o,a.minV,a.maxV),g=a.interpolate_b(n,o,a.minV,a.maxV),h=a.interpolate_a(n,o,a.minV,a.maxV);a.polygons_full&&(e.edges.bl={path:[[l,0],[0,s]],move:{x:-1,y:0,enter:"rt"}},e.edges.tl={path:[[p,1],[1,g]],move:{x:1,y:0,enter:"lt"}},e.edges.rb={path:[[1,h],[i,0]],move:{x:0,y:-1,enter:"tr"}}),a.polygons&&e.polygons.push([[l,0],[0,s],[0,1],[p,1],[1,g],[1,h],[i,0]])},heptagon_br:function(e,t,n,o,r,a){var l=a.interpolate(t,n,a.minV,a.maxV),i=a.interpolate_a(t,r,a.minV,a.maxV),s=a.interpolate_b(t,r,a.minV,a.maxV),p=a.interpolate_a(r,o,a.minV,a.maxV),g=a.interpolate_b(r,o,a.minV,a.maxV),h=a.interpolate(n,o,a.minV,a.maxV);a.polygons_full&&(e.edges.br={path:[[l,0],[0,i]],move:{x:-1,y:0,enter:"rb"}},e.edges.lt={path:[[0,s],[p,1]],move:{x:0,y:1,enter:"bl"}},e.edges.tr={path:[[g,1],[1,h]],move:{x:1,y:0,enter:"lb"}}),a.polygons&&e.polygons.push([[l,0],[0,i],[0,s],[p,1],[g,1],[1,h],[1,0]])},octagon:function(e,t,n,o,r,a){var l=a.interpolate_a(t,n,a.minV,a.maxV),i=a.interpolate_b(t,n,a.minV,a.maxV),s=a.interpolate_a(t,r,a.minV,a.maxV),p=a.interpolate_b(t,r,a.minV,a.maxV),g=a.interpolate_a(r,o,a.minV,a.maxV),h=a.interpolate_b(r,o,a.minV,a.maxV),m=a.interpolate_b(n,o,a.minV,a.maxV),u=a.interpolate_a(n,o,a.minV,a.maxV);a.polygons_full&&(e.edges.bl={path:[[l,0],[0,s]],move:{x:-1,y:0,enter:"rb"}},e.edges.lt={path:[[0,p],[g,1]],move:{x:0,y:1,enter:"bl"}},e.edges.tr={path:[[h,1],[1,m]],move:{x:1,y:0,enter:"lt"}},e.edges.rb={path:[[1,u],[i,0]],move:{x:0,y:-1,enter:"tr"}}),a.polygons&&e.polygons.push([[l,0],[0,s],[0,p],[g,1],[h,1],[1,m],[1,u],[i,0]])}};function u(e,s,g,h){var m,u,b,y=!1,_=null,d=null,f=null,V=null,x=!1,v=[],k=[],w=[];if(!e)throw new Error("data is required");if(null==s)throw new Error("lowerBound is required");if(null==g)throw new Error("bandWidth is required");if(h&&"object"!=typeof h)throw new Error("options must be an object");if(b=function(e){var a,l,i,s,p;for(s=new r,e=e||{},p=Object.keys(s),a=0;a<p.length;a++)null!=(i=e[l=p[a]])&&(s[l]=i);return s.polygons_full=!s.polygons,s.interpolate=t,s.interpolate_a=n,s.interpolate_b=o,s}(h),e instanceof p)_=e,d=e.root,f=e.data,b.noQuadTree||(y=!0);else{if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Error("input is neither array of arrays nor object retrieved from 'QuadTree()'");f=e}if(Array.isArray(s)){for(x=!0,b.noQuadTree||(y=!0),m=0;m<s.length;m++)if(isNaN(+s[m]))throw new Error("lowerBound["+m+"] is not a number");if(Array.isArray(g)){if(s.length!==g.length)throw new Error("lowerBound and bandWidth have unequal lengths");for(m=0;m<g.length;m++)if(isNaN(+g[m]))throw new Error("bandWidth["+m+"] is not a number")}else{if(isNaN(+g))throw new Error("bandWidth must be a number");for(v=[],m=0;m<s.length;m++)v.push(g);g=v}}else{if(isNaN(+s))throw new Error("lowerBound must be a number");if(s=[s],isNaN(+g))throw new Error("bandWidth must be a number");g=[g]}return y&&!d&&(_=new p(f),d=_.root,f=_.data),b.verbose&&(b.polygons?console.log("MarchingSquaresJS-isoBands: returning single polygons for each grid cell"):console.log("MarchingSquaresJS-isoBands: returning polygon paths for entire data grid"),x&&console.log("MarchingSquaresJS-isoBands: multiple bands requested, returning array of band polygons instead of polygons for a single band")),s.forEach((function(e,t){if(k=[],b.minV=e,b.maxV=e+g[t],b.verbose&&console.log("MarchingSquaresJS-isoBands: computing isobands for ["+e+":"+(e+g[t])+"]"),b.polygons)if(y)d.cellsInBand(b.minV,b.maxV,!0).forEach((function(e){k=k.concat(a(c(f,e.x,e.y,b),e.x,e.y,b))}));else for(u=0;u<f.length-1;++u)for(m=0;m<f[0].length-1;++m)k=k.concat(a(c(f,m,u,b),m,u,b));else{for(V=[],m=0;m<f[0].length-1;++m)V[m]=[];if(y)d.cellsInBand(b.minV,b.maxV,!1).forEach((function(e){V[e.x][e.y]=c(f,e.x,e.y,b)}));else for(m=0;m<f[0].length-1;++m)for(u=0;u<f.length-1;++u)V[m][u]=c(f,m,u,b);k=function(e,t,n){var o,r,a,s,p,g,h,m,u,b,c,y,_,d,f,V,x=[],v=e.length-1,k=e[0].length-1,w=[["rt","rb"],["br","bl"],["lb","lt"],["tl","tr"]],B=[0,-1,0,1],E=[-1,0,1,0],A=["bl","lb","lt","tl","tr","rt","rb","br"],N={bl:1,br:1,lb:2,lt:2,tl:3,tr:3,rt:0,rb:0};return function(e,t,n){var o,r,a,l,i;for(o=!0,r=e[0].length,a=e.length,i=0;i<a;i++)if(e[i][0]<t||e[i][0]>n||e[i][r-1]<t||e[i][r-1]>n){o=!1;break}if(o&&(e[a-1][0]<t||e[a-1][0]>n||e[a-1][r-1]<t||e[a-1][r-1]>n)&&(o=!1),o)for(l=0;l<r-1;l++)if(e[0][l]<t||e[0][l]>n||e[a-1][l]<t||e[a-1][l]>n){o=!1;break}return o}(e,n.minV,n.maxV)&&(n.linearRing?x.push([[0,0],[0,v],[k,v],[k,0],[0,0]]):x.push([[0,0],[0,v],[k,v],[k,0]])),t.forEach((function(e,q){e.forEach((function(e,T){for(o=null,a=0;a<8;a++)if(o=A[a],"object"==typeof e.edges[o]){for(r=[],s=e.edges[o],h=o,m=q,u=T,b=!1,c=[q+s.path[0][0],T+s.path[0][1]],r.push(c);!b&&"object"==typeof(y=t[m][u]).edges[h];)if(s=y.edges[h],delete y.edges[h],(f=s.path[1])[0]+=m,f[1]+=u,r.push(f),h=s.move.enter,m+=s.move.x,u+=s.move.y,void 0===t[m]||void 0===t[m][u]){if(_=0,d=0,m===k)m--,_=0;else if(m<0)m++,_=2;else if(u===v)u--,_=3;else{if(!(u<0))throw new Error("Left the grid somewhere in the interior!");u++,_=1}if(m===q&&u===T&&_===N[o]){b=!0,h=o;break}for(;;){if(V=!1,d>4)throw new Error("Direction change counter overflow! This should never happen!");if(void 0!==t[m]&&void 0!==t[m][u])for(y=t[m][u],p=0;p<w[_].length;p++)if(g=w[_][p],"object"==typeof y.edges[g]){s=y.edges[g],r.push(l(m,u,_,s.path)),h=g,V=!0;break}if(V)break;if(r.push(i(m,u,_)),u+=E[_],void 0!==t[m+=B[_]]&&void 0!==t[m][u]||(0===_&&u<0||1===_&&m<0||2===_&&u===v||3===_&&m===k)&&(m-=B[_],u-=E[_],_=(_+1)%4,d++),m===q&&u===T&&_===N[o]){b=!0,h=o;break}}}!n.linearRing||r[r.length-1][0]===c[0]&&r[r.length-1][1]===c[1]||r.push(c),x.push(r)}}))})),x}(f,V,b)}x?w.push(k):w=k,"function"==typeof b.successCallback&&b.successCallback(w,e,g[t])})),w}function b(e,t,n,o,r,a){var l=(o+n+t+e)/4;return l>a?2:l<r?0:1}function c(e,t,n,o){var r,a,l=0,i=e[n+1][t],s=e[n+1][t+1],p=e[n][t+1],g=e[n][t],h=o.minV,u=o.maxV;if(!(isNaN(g)||isNaN(p)||isNaN(s)||isNaN(i))){switch(l|=i<h?0:i>u?128:64,l|=s<h?0:s>u?32:16,l|=p<h?0:p>u?8:4,a=0,r={cval:l=+(l|=g<h?0:g>u?2:1),polygons:[],edges:{},x0:g,x1:p,x2:s,x3:i,x:t,y:n},l){case 85:m.square(r,g,p,s,i,o);case 0:case 170:break;case 169:m.triangle_bl(r,g,p,s,i,o);break;case 166:m.triangle_br(r,g,p,s,i,o);break;case 154:m.triangle_tr(r,g,p,s,i,o);break;case 106:m.triangle_tl(r,g,p,s,i,o);break;case 1:m.triangle_bl(r,g,p,s,i,o);break;case 4:m.triangle_br(r,g,p,s,i,o);break;case 16:m.triangle_tr(r,g,p,s,i,o);break;case 64:m.triangle_tl(r,g,p,s,i,o);break;case 168:m.tetragon_bl(r,g,p,s,i,o);break;case 162:m.tetragon_br(r,g,p,s,i,o);break;case 138:m.tetragon_tr(r,g,p,s,i,o);break;case 42:m.tetragon_tl(r,g,p,s,i,o);break;case 2:m.tetragon_bl(r,g,p,s,i,o);break;case 8:m.tetragon_br(r,g,p,s,i,o);break;case 32:m.tetragon_tr(r,g,p,s,i,o);break;case 128:m.tetragon_tl(r,g,p,s,i,o);break;case 5:m.tetragon_b(r,g,p,s,i,o);break;case 20:m.tetragon_r(r,g,p,s,i,o);break;case 80:m.tetragon_t(r,g,p,s,i,o);break;case 65:m.tetragon_l(r,g,p,s,i,o);break;case 165:m.tetragon_b(r,g,p,s,i,o);break;case 150:m.tetragon_r(r,g,p,s,i,o);break;case 90:m.tetragon_t(r,g,p,s,i,o);break;case 105:m.tetragon_l(r,g,p,s,i,o);break;case 160:m.tetragon_lr(r,g,p,s,i,o);break;case 130:m.tetragon_tb(r,g,p,s,i,o);break;case 10:m.tetragon_lr(r,g,p,s,i,o);break;case 40:m.tetragon_tb(r,g,p,s,i,o);break;case 101:m.pentagon_tr(r,g,p,s,i,o);break;case 149:m.pentagon_tl(r,g,p,s,i,o);break;case 86:m.pentagon_bl(r,g,p,s,i,o);break;case 89:m.pentagon_br(r,g,p,s,i,o);break;case 69:m.pentagon_tr(r,g,p,s,i,o);break;case 21:m.pentagon_tl(r,g,p,s,i,o);break;case 84:m.pentagon_bl(r,g,p,s,i,o);break;case 81:m.pentagon_br(r,g,p,s,i,o);break;case 96:m.pentagon_tr_rl(r,g,p,s,i,o);break;case 24:m.pentagon_rb_bt(r,g,p,s,i,o);break;case 6:m.pentagon_bl_lr(r,g,p,s,i,o);break;case 129:m.pentagon_lt_tb(r,g,p,s,i,o);break;case 74:m.pentagon_tr_rl(r,g,p,s,i,o);break;case 146:m.pentagon_rb_bt(r,g,p,s,i,o);break;case 164:m.pentagon_bl_lr(r,g,p,s,i,o);break;case 41:m.pentagon_lt_tb(r,g,p,s,i,o);break;case 66:m.pentagon_bl_tb(r,g,p,s,i,o);break;case 144:m.pentagon_lt_rl(r,g,p,s,i,o);break;case 36:m.pentagon_tr_bt(r,g,p,s,i,o);break;case 9:m.pentagon_rb_lr(r,g,p,s,i,o);break;case 104:m.pentagon_bl_tb(r,g,p,s,i,o);break;case 26:m.pentagon_lt_rl(r,g,p,s,i,o);break;case 134:m.pentagon_tr_bt(r,g,p,s,i,o);break;case 161:m.pentagon_rb_lr(r,g,p,s,i,o);break;case 37:m.hexagon_lt_tr(r,g,p,s,i,o);break;case 148:m.hexagon_bl_lt(r,g,p,s,i,o);break;case 82:m.hexagon_bl_rb(r,g,p,s,i,o);break;case 73:m.hexagon_tr_rb(r,g,p,s,i,o);break;case 133:m.hexagon_lt_tr(r,g,p,s,i,o);break;case 22:m.hexagon_bl_lt(r,g,p,s,i,o);break;case 88:m.hexagon_bl_rb(r,g,p,s,i,o);break;case 97:m.hexagon_tr_rb(r,g,p,s,i,o);break;case 145:case 25:m.hexagon_lt_rb(r,g,p,s,i,o);break;case 70:case 100:m.hexagon_bl_tr(r,g,p,s,i,o);break;case 17:0===(a=b(g,p,s,i,h,u))?(m.triangle_bl(r,g,p,s,i,o),m.triangle_tr(r,g,p,s,i,o)):m.hexagon_lt_rb(r,g,p,s,i,o);break;case 68:0===(a=b(g,p,s,i,h,u))?(m.triangle_tl(r,g,p,s,i,o),m.triangle_br(r,g,p,s,i,o)):m.hexagon_bl_tr(r,g,p,s,i,o);break;case 153:2===(a=b(g,p,s,i,h,u))?(m.triangle_bl(r,g,p,s,i,o),m.triangle_tr(r,g,p,s,i,o)):m.hexagon_lt_rb(r,g,p,s,i,o);break;case 102:2===(a=b(g,p,s,i,h,u))?(m.triangle_tl(r,g,p,s,i,o),m.triangle_br(r,g,p,s,i,o)):m.hexagon_bl_tr(r,g,p,s,i,o);break;case 152:2===(a=b(g,p,s,i,h,u))?(m.triangle_tr(r,g,p,s,i,o),m.tetragon_bl(r,g,p,s,i,o)):m.heptagon_tr(r,g,p,s,i,o);break;case 137:2===(a=b(g,p,s,i,h,u))?(m.triangle_bl(r,g,p,s,i,o),m.tetragon_tr(r,g,p,s,i,o)):m.heptagon_bl(r,g,p,s,i,o);break;case 98:2===(a=b(g,p,s,i,h,u))?(m.triangle_tl(r,g,p,s,i,o),m.tetragon_br(r,g,p,s,i,o)):m.heptagon_tl(r,g,p,s,i,o);break;case 38:2===(a=b(g,p,s,i,h,u))?(m.triangle_br(r,g,p,s,i,o),m.tetragon_tl(r,g,p,s,i,o)):m.heptagon_br(r,g,p,s,i,o);break;case 18:0===(a=b(g,p,s,i,h,u))?(m.triangle_tr(r,g,p,s,i,o),m.tetragon_bl(r,g,p,s,i,o)):m.heptagon_tr(r,g,p,s,i,o);break;case 33:0===(a=b(g,p,s,i,h,u))?(m.triangle_bl(r,g,p,s,i,o),m.tetragon_tr(r,g,p,s,i,o)):m.heptagon_bl(r,g,p,s,i,o);break;case 72:0===(a=b(g,p,s,i,h,u))?(m.triangle_tl(r,g,p,s,i,o),m.tetragon_br(r,g,p,s,i,o)):m.heptagon_tl(r,g,p,s,i,o);break;case 132:0===(a=b(g,p,s,i,h,u))?(m.triangle_br(r,g,p,s,i,o),m.tetragon_tl(r,g,p,s,i,o)):m.heptagon_br(r,g,p,s,i,o);break;case 136:0===(a=b(g,p,s,i,h,u))?(m.tetragon_tl(r,g,p,s,i,o),m.tetragon_br(r,g,p,s,i,o)):1===a?m.octagon(r,g,p,s,i,o):(m.tetragon_bl(r,g,p,s,i,o),m.tetragon_tr(r,g,p,s,i,o));break;case 34:0===(a=b(g,p,s,i,h,u))?(m.tetragon_bl(r,g,p,s,i,o),m.tetragon_tr(r,g,p,s,i,o)):1===a?m.octagon(r,g,p,s,i,o):(m.tetragon_tl(r,g,p,s,i,o),m.tetragon_br(r,g,p,s,i,o))}return r}}export{p as QuadTree,u as isoBands,g as isoContours,g as isoLines,p as quadTree};export default null;
