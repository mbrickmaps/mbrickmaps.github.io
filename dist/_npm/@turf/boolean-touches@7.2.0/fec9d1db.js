/**
 * Bundled by jsDelivr using Rollup v2.79.2 and Terser v5.37.0.
 * Original file: /npm/@turf/boolean-touches@7.2.0/dist/esm/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{booleanPointOnLine as o}from"../boolean-point-on-line@7.2.0/cd67869a.js";import{booleanPointInPolygon as t}from"../boolean-point-in-polygon@7.2.0/080fdfef.js";import{getGeom as e}from"../invariant@7.2.0/671cab78.js";function n(n,i){var a=e(n),s=e(i),c=a.type,d=s.type;switch(c){case"Point":switch(d){case"LineString":return r(a,s);case"MultiLineString":for(var g=!1,y=0;y<s.coordinates.length;y++)r(a,{type:"LineString",coordinates:s.coordinates[y]})&&(g=!0);return g;case"Polygon":for(var u=0;u<s.coordinates.length;u++)if(o(a,{type:"LineString",coordinates:s.coordinates[u]}))return!0;return!1;case"MultiPolygon":for(u=0;u<s.coordinates.length;u++)for(y=0;y<s.coordinates[u].length;y++)if(o(a,{type:"LineString",coordinates:s.coordinates[u][y]}))return!0;return!1;default:throw new Error("feature2 "+d+" geometry not supported")}case"MultiPoint":switch(d){case"LineString":for(g=!1,u=0;u<a.coordinates.length;u++)if(g||r({type:"Point",coordinates:a.coordinates[u]},s)&&(g=!0),o({type:"Point",coordinates:a.coordinates[u]},s,{ignoreEndVertices:!0}))return!1;return g;case"MultiLineString":for(g=!1,u=0;u<a.coordinates.length;u++)for(y=0;y<s.coordinates.length;y++)if(g||r({type:"Point",coordinates:a.coordinates[u]},{type:"LineString",coordinates:s.coordinates[y]})&&(g=!0),o({type:"Point",coordinates:a.coordinates[u]},{type:"LineString",coordinates:s.coordinates[y]},{ignoreEndVertices:!0}))return!1;return g;case"Polygon":for(g=!1,u=0;u<a.coordinates.length;u++)if(g||o({type:"Point",coordinates:a.coordinates[u]},{type:"LineString",coordinates:s.coordinates[0]})&&(g=!0),t({type:"Point",coordinates:a.coordinates[u]},s,{ignoreBoundary:!0}))return!1;return g;case"MultiPolygon":for(g=!1,u=0;u<a.coordinates.length;u++)for(y=0;y<s.coordinates.length;y++)if(g||o({type:"Point",coordinates:a.coordinates[u]},{type:"LineString",coordinates:s.coordinates[y][0]})&&(g=!0),t({type:"Point",coordinates:a.coordinates[u]},{type:"Polygon",coordinates:s.coordinates[y]},{ignoreBoundary:!0}))return!1;return g;default:throw new Error("feature2 "+d+" geometry not supported")}case"LineString":switch(d){case"Point":return r(s,a);case"MultiPoint":for(g=!1,u=0;u<s.coordinates.length;u++)if(g||r({type:"Point",coordinates:s.coordinates[u]},a)&&(g=!0),o({type:"Point",coordinates:s.coordinates[u]},a,{ignoreEndVertices:!0}))return!1;return g;case"LineString":var p=!1;if(r({type:"Point",coordinates:a.coordinates[0]},s)&&(p=!0),r({type:"Point",coordinates:a.coordinates[a.coordinates.length-1]},s)&&(p=!0),!1===p)return!1;for(u=0;u<a.coordinates.length;u++)if(o({type:"Point",coordinates:a.coordinates[u]},s,{ignoreEndVertices:!0}))return!1;return p;case"MultiLineString":for(p=!1,u=0;u<s.coordinates.length;u++){r({type:"Point",coordinates:a.coordinates[0]},{type:"LineString",coordinates:s.coordinates[u]})&&(p=!0),r({type:"Point",coordinates:a.coordinates[a.coordinates.length-1]},{type:"LineString",coordinates:s.coordinates[u]})&&(p=!0);for(y=0;y<a.coordinates[u].length;y++)if(o({type:"Point",coordinates:a.coordinates[y]},{type:"LineString",coordinates:s.coordinates[u]},{ignoreEndVertices:!0}))return!1}return p;case"Polygon":for(g=!1,u=0;u<a.coordinates.length;u++)if(g||o({type:"Point",coordinates:a.coordinates[u]},{type:"LineString",coordinates:s.coordinates[0]})&&(g=!0),t({type:"Point",coordinates:a.coordinates[u]},s,{ignoreBoundary:!0}))return!1;return g;case"MultiPolygon":for(g=!1,u=0;u<a.coordinates.length;u++){for(y=0;y<s.coordinates.length;y++)g||o({type:"Point",coordinates:a.coordinates[u]},{type:"LineString",coordinates:s.coordinates[y][0]})&&(g=!0);if(t({type:"Point",coordinates:a.coordinates[u]},s,{ignoreBoundary:!0}))return!1}return g;default:throw new Error("feature2 "+d+" geometry not supported")}case"MultiLineString":switch(d){case"Point":for(u=0;u<a.coordinates.length;u++)if(r(s,{type:"LineString",coordinates:a.coordinates[u]}))return!0;return!1;case"MultiPoint":for(g=!1,u=0;u<a.coordinates.length;u++)for(y=0;y<s.coordinates.length;y++)if(g||r({type:"Point",coordinates:s.coordinates[y]},{type:"LineString",coordinates:a.coordinates[y]})&&(g=!0),o({type:"Point",coordinates:s.coordinates[y]},{type:"LineString",coordinates:a.coordinates[y]},{ignoreEndVertices:!0}))return!1;return g;case"LineString":for(p=!1,u=0;u<a.coordinates.length;u++){r({type:"Point",coordinates:a.coordinates[u][0]},s)&&(p=!0),r({type:"Point",coordinates:a.coordinates[u][a.coordinates[u].length-1]},s)&&(p=!0);for(y=0;y<s.coordinates.length;y++)if(o({type:"Point",coordinates:s.coordinates[y]},{type:"LineString",coordinates:a.coordinates[u]},{ignoreEndVertices:!0}))return!1}return p;case"MultiLineString":for(p=!1,u=0;u<a.coordinates.length;u++)for(y=0;y<s.coordinates.length;y++){r({type:"Point",coordinates:a.coordinates[u][0]},{type:"LineString",coordinates:s.coordinates[y]})&&(p=!0),r({type:"Point",coordinates:a.coordinates[u][a.coordinates[u].length-1]},{type:"LineString",coordinates:s.coordinates[y]})&&(p=!0);for(var l=0;l<a.coordinates[u].length;l++)if(o({type:"Point",coordinates:a.coordinates[u][l]},{type:"LineString",coordinates:s.coordinates[y]},{ignoreEndVertices:!0}))return!1}return p;case"Polygon":for(g=!1,u=0;u<a.coordinates.length;u++)for(y=0;y<a.coordinates.length;y++)if(g||o({type:"Point",coordinates:a.coordinates[u][y]},{type:"LineString",coordinates:s.coordinates[0]})&&(g=!0),t({type:"Point",coordinates:a.coordinates[u][y]},s,{ignoreBoundary:!0}))return!1;return g;case"MultiPolygon":for(g=!1,u=0;u<s.coordinates[0].length;u++)for(y=0;y<a.coordinates.length;y++)for(l=0;l<a.coordinates[y].length;l++)if(g||o({type:"Point",coordinates:a.coordinates[y][l]},{type:"LineString",coordinates:s.coordinates[0][u]})&&(g=!0),t({type:"Point",coordinates:a.coordinates[y][l]},{type:"Polygon",coordinates:[s.coordinates[0][u]]},{ignoreBoundary:!0}))return!1;return g;default:throw new Error("feature2 "+d+" geometry not supported")}case"Polygon":switch(d){case"Point":for(u=0;u<a.coordinates.length;u++)if(o(s,{type:"LineString",coordinates:a.coordinates[u]}))return!0;return!1;case"MultiPoint":for(g=!1,u=0;u<s.coordinates.length;u++)if(g||o({type:"Point",coordinates:s.coordinates[u]},{type:"LineString",coordinates:a.coordinates[0]})&&(g=!0),t({type:"Point",coordinates:s.coordinates[u]},a,{ignoreBoundary:!0}))return!1;return g;case"LineString":for(g=!1,u=0;u<s.coordinates.length;u++)if(g||o({type:"Point",coordinates:s.coordinates[u]},{type:"LineString",coordinates:a.coordinates[0]})&&(g=!0),t({type:"Point",coordinates:s.coordinates[u]},a,{ignoreBoundary:!0}))return!1;return g;case"MultiLineString":for(g=!1,u=0;u<s.coordinates.length;u++)for(y=0;y<s.coordinates[u].length;y++)if(g||o({type:"Point",coordinates:s.coordinates[u][y]},{type:"LineString",coordinates:a.coordinates[0]})&&(g=!0),t({type:"Point",coordinates:s.coordinates[u][y]},a,{ignoreBoundary:!0}))return!1;return g;case"Polygon":for(g=!1,u=0;u<a.coordinates[0].length;u++)if(g||o({type:"Point",coordinates:a.coordinates[0][u]},{type:"LineString",coordinates:s.coordinates[0]})&&(g=!0),t({type:"Point",coordinates:a.coordinates[0][u]},s,{ignoreBoundary:!0}))return!1;return g;case"MultiPolygon":for(g=!1,u=0;u<s.coordinates[0].length;u++)for(y=0;y<a.coordinates[0].length;y++)if(g||o({type:"Point",coordinates:a.coordinates[0][y]},{type:"LineString",coordinates:s.coordinates[0][u]})&&(g=!0),t({type:"Point",coordinates:a.coordinates[0][y]},{type:"Polygon",coordinates:s.coordinates[0][u]},{ignoreBoundary:!0}))return!1;return g;default:throw new Error("feature2 "+d+" geometry not supported")}case"MultiPolygon":switch(d){case"Point":for(u=0;u<a.coordinates[0].length;u++)if(o(s,{type:"LineString",coordinates:a.coordinates[0][u]}))return!0;return!1;case"MultiPoint":for(g=!1,u=0;u<a.coordinates[0].length;u++)for(y=0;y<s.coordinates.length;y++)if(g||o({type:"Point",coordinates:s.coordinates[y]},{type:"LineString",coordinates:a.coordinates[0][u]})&&(g=!0),t({type:"Point",coordinates:s.coordinates[y]},{type:"Polygon",coordinates:a.coordinates[0][u]},{ignoreBoundary:!0}))return!1;return g;case"LineString":for(g=!1,u=0;u<a.coordinates[0].length;u++)for(y=0;y<s.coordinates.length;y++)if(g||o({type:"Point",coordinates:s.coordinates[y]},{type:"LineString",coordinates:a.coordinates[0][u]})&&(g=!0),t({type:"Point",coordinates:s.coordinates[y]},{type:"Polygon",coordinates:a.coordinates[0][u]},{ignoreBoundary:!0}))return!1;return g;case"MultiLineString":for(g=!1,u=0;u<a.coordinates.length;u++)for(y=0;y<s.coordinates.length;y++)for(l=0;l<s.coordinates[y].length;l++)if(g||o({type:"Point",coordinates:s.coordinates[y][l]},{type:"LineString",coordinates:a.coordinates[u][0]})&&(g=!0),t({type:"Point",coordinates:s.coordinates[y][l]},{type:"Polygon",coordinates:[a.coordinates[u][0]]},{ignoreBoundary:!0}))return!1;return g;case"Polygon":for(g=!1,u=0;u<a.coordinates[0].length;u++)for(y=0;y<a.coordinates[0][u].length;y++)if(g||o({type:"Point",coordinates:a.coordinates[0][u][y]},{type:"LineString",coordinates:s.coordinates[0]})&&(g=!0),t({type:"Point",coordinates:a.coordinates[0][u][y]},s,{ignoreBoundary:!0}))return!1;return g;case"MultiPolygon":for(g=!1,u=0;u<a.coordinates[0].length;u++)for(y=0;y<s.coordinates[0].length;y++)for(l=0;l<a.coordinates[0].length;l++)if(g||o({type:"Point",coordinates:a.coordinates[0][u][l]},{type:"LineString",coordinates:s.coordinates[0][y]})&&(g=!0),t({type:"Point",coordinates:a.coordinates[0][u][l]},{type:"Polygon",coordinates:s.coordinates[0][y]},{ignoreBoundary:!0}))return!1;return g;default:throw new Error("feature2 "+d+" geometry not supported")}default:throw new Error("feature1 "+c+" geometry not supported")}}function r(o,t){return!!i(t.coordinates[0],o.coordinates)||!!i(t.coordinates[t.coordinates.length-1],o.coordinates)}function i(o,t){return o[0]===t[0]&&o[1]===t[1]}var a=n;export{n as booleanTouches,a as default};
