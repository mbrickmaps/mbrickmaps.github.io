/**
 * Bundled by jsDelivr using Rollup v2.79.2 and Terser v5.37.0.
 * Original file: /npm/@turf/boolean-disjoint@7.2.0/dist/esm/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{booleanPointInPolygon as e}from"../boolean-point-in-polygon@7.2.0/080fdfef.js";import{lineIntersect as n}from"../line-intersect@7.2.0/f0a0b5a4.js";import{flattenEach as t}from"../meta@7.2.0/c0f2fe64.js";import{polygonToLine as r}from"../polygon-to-line@7.2.0/f6343f87.js";function o(o,c,{ignoreSelfIntersections:f=!0}={ignoreSelfIntersections:!0}){let u=!0;return t(o,(o=>{t(c,(t=>{if(!1===u)return!1;u=function(t,o,c){switch(t.type){case"Point":switch(o.type){case"Point":return f=t.coordinates,u=o.coordinates,!(f[0]===u[0]&&f[1]===u[1]);case"LineString":return!i(o,t);case"Polygon":return!e(t,o)}break;case"LineString":switch(o.type){case"Point":return!i(t,o);case"LineString":return!function(e,t,r){const o=n(e,t,{ignoreSelfIntersections:r});if(o.features.length>0)return!0;return!1}(t,o,c);case"Polygon":return!s(o,t,c)}break;case"Polygon":switch(o.type){case"Point":return!e(o,t);case"LineString":return!s(t,o,c);case"Polygon":return!function(t,o,i){for(const n of t.coordinates[0])if(e(n,o))return!0;for(const n of o.coordinates[0])if(e(n,t))return!0;const s=n(r(t),r(o),{ignoreSelfIntersections:i});if(s.features.length>0)return!0;return!1}(o,t,c)}}var f,u;return!1}(o.geometry,t.geometry,f)}))})),u}function i(e,n){for(let t=0;t<e.coordinates.length-1;t++)if(c(e.coordinates[t],e.coordinates[t+1],n.coordinates))return!0;return!1}function s(t,o,i){for(const n of o.coordinates)if(e(n,t))return!0;return n(o,r(t),{ignoreSelfIntersections:i}).features.length>0}function c(e,n,t){const r=t[0]-e[0],o=t[1]-e[1],i=n[0]-e[0],s=n[1]-e[1];return 0==r*s-o*i&&(Math.abs(i)>=Math.abs(s)?i>0?e[0]<=t[0]&&t[0]<=n[0]:n[0]<=t[0]&&t[0]<=e[0]:s>0?e[1]<=t[1]&&t[1]<=n[1]:n[1]<=t[1]&&t[1]<=e[1])}var f=o;export{o as booleanDisjoint,f as default};
