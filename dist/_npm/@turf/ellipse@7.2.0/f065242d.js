/**
 * Bundled by jsDelivr using Rollup v2.79.2 and Terser v5.37.0.
 * Original file: /npm/@turf/ellipse@7.2.0/dist/esm/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{isObject as t,isNumber as r,degreesToRadians as e,polygon as o}from"../helpers@7.2.0/28807c9c.js";import{rhumbDestination as s}from"../rhumb-destination@7.2.0/3f05ec15.js";import{transformRotate as n}from"../transform-rotate@7.2.0/8132c332.js";import{getCoord as i}from"../invariant@7.2.0/671cab78.js";function a(a,p,h,u){const f=(u=u||{}).steps||64,w=u.units||"kilometers",M=u.angle||0,c=u.pivot||a,d=u.properties||{};if(!a)throw new Error("center is required");if(!p)throw new Error("xSemiAxis is required");if(!h)throw new Error("ySemiAxis is required");if(!t(u))throw new Error("options must be an object");if(!r(f))throw new Error("steps must be a number");if(!r(M))throw new Error("angle must be a number");const b=i(a);if("degrees"!==w){const t=s(a,p,90,{units:w}),r=s(a,h,0,{units:w});p=i(t)[0]-b[0],h=i(r)[1]-b[1]}const l=[];for(let t=0;t<f;t+=1){const r=-360*t/f;let o=p*h/Math.sqrt(Math.pow(h,2)+Math.pow(p,2)*Math.pow(m(r),2)),s=p*h/Math.sqrt(Math.pow(p,2)+Math.pow(h,2)/Math.pow(m(r),2));if(r<-90&&r>=-270&&(o=-o),r<-180&&r>=-360&&(s=-s),"degrees"===w){const t=e(M),r=o*Math.cos(t)+s*Math.sin(t),n=s*Math.cos(t)-o*Math.sin(t);o=r,s=n}l.push([o+b[0],s+b[1]])}return l.push(l[0]),"degrees"===w?o([l],d):n(o([l],d),M,{pivot:c})}function m(t){const r=t*Math.PI/180;return Math.tan(r)}var p=a;export{p as default,a as ellipse};
