/**
 * Bundled by jsDelivr using Rollup v2.79.2 and Terser v5.37.0.
 * Original file: /npm/@turf/clusters-dbscan@7.2.0/dist/esm/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{clone as e}from"../clone@7.2.0/5b9e5666.js";import{distance as r}from"../distance@7.2.0/379bfd17.js";import{lengthToDegrees as t,degreesToRadians as a}from"../helpers@7.2.0/28807c9c.js";import s from"../../rbush@3.0.1/d425f52b.js";var n=s;function o(s,o,m={}){!0!==m.mutate&&(s=e(s));const i=m.minPoints||3,f=t(o,m.units);var u=new n(s.features.length),p=s.features.map((e=>!1)),c=s.features.map((e=>!1)),h=s.features.map((e=>!1)),l=s.features.map((e=>-1));u.load(s.features.map(((e,r)=>{var[t,a]=e.geometry.coordinates;return{minX:t,minY:a,maxX:t,maxY:a,index:r}})));const d=e=>{const t=s.features[e],[n,m]=t.geometry.coordinates,i=Math.max(m-f,-90),p=Math.min(m+f,90),c=i<0&&p>0?f:Math.abs(i)<Math.abs(p)?f/Math.cos(a(p)):f/Math.cos(a(i)),h=Math.max(n-c,-360),l=Math.min(n+c,360),d={minX:h,minY:i,maxX:l,maxY:p};return u.search(d).filter((e=>{const a=e.index,n=s.features[a];return r(t,n,{units:"kilometers"})<=o}))};var x=0;return s.features.forEach(((e,r)=>{if(p[r])return;const t=d(r);if(t.length>=i){const e=x;x++,p[r]=!0,((e,r)=>{for(var t=0;t<r.length;t++){const a=r[t].index;if(!p[a]){p[a]=!0;const e=d(a);e.length>=i&&r.push(...e)}c[a]||(c[a]=!0,l[a]=e)}})(e,t)}else h[r]=!0})),s.features.forEach(((e,r)=>{var t=s.features[r];t.properties||(t.properties={}),l[r]>=0?(t.properties.dbscan=h[r]?"edge":"core",t.properties.cluster=l[r]):t.properties.dbscan="noise"})),s}var m=o;export{o as clustersDbscan,m as default};
