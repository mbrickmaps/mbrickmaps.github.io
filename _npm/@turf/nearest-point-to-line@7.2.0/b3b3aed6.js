/**
 * Bundled by jsDelivr using Rollup v2.79.2 and Terser v5.37.0.
 * Original file: /npm/@turf/nearest-point-to-line@7.2.0/dist/esm/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{getType as e}from"../invariant@7.2.0/671cab78.js";import{featureEach as t,geomEach as r}from"../meta@7.2.0/c0f2fe64.js";import{pointToLineDistance as o}from"../point-to-line-distance@7.2.0/12dcf0a8.js";var n=Object.defineProperty,i=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,a=(e,t,r)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,u=(e,t)=>{for(var r in t||(t={}))p.call(t,r)&&a(e,r,t[r]);if(i)for(var r of i(t))s.call(t,r)&&a(e,r,t[r]);return e};function l(n,i,p={}){const s=p.units,a=p.properties||{},l=function(e){const t=[];switch(e.geometry?e.geometry.type:e.type){case"GeometryCollection":return r(e,(e=>{"Point"===e.type&&t.push({type:"Feature",properties:{},geometry:e})})),{type:"FeatureCollection",features:t};case"FeatureCollection":return e.features=e.features.filter((e=>"Point"===e.geometry.type)),e;default:throw new Error("points must be a Point Collection")}}(n);if(!l.features.length)throw new Error("points must contain features");if(!i)throw new Error("line is required");if("LineString"!==e(i))throw new Error("line must be a LineString");let f=1/0,m=null;return t(l,(e=>{const t=o(e,i,{units:s});t<f&&(f=t,m=e)})),m&&(m.properties=u(u(u({},{dist:f}),m.properties),a)),m}var f=l;export{f as default,l as nearestPointToLine};
