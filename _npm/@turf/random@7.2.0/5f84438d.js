/**
 * Bundled by jsDelivr using Rollup v2.79.2 and Terser v5.37.0.
 * Original file: /npm/@turf/random@7.2.0/dist/esm/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{validateBBox as t,point as a,featureCollection as n,isNumber as r,polygon as o,isObject as e,lineString as l}from"../helpers@7.2.0/28807c9c.js";function h(t){return b(t),i(t)}function i(t){return Array.isArray(t)?d(t):t&&t.bbox?d(t.bbox):[360*_(),180*_()]}function b(a){null!=a&&(Array.isArray(a)?t(a):null!=a.bbox&&t(a.bbox))}function u(t,r={}){b(r.bbox),null==t&&(t=1);const o=[];for(let n=0;n<t;n++)o.push(a(i(r.bbox)));return n(o)}function x(t,a={}){b(a.bbox),null==t&&(t=1),void 0!==a.bbox&&null!==a.bbox||(a.bbox=[-180,-90,180,90]),r(a.num_vertices)&&void 0!==a.num_vertices||(a.num_vertices=10),r(a.max_radial_length)&&void 0!==a.max_radial_length||(a.max_radial_length=10);const e=Math.abs(a.bbox[0]-a.bbox[2]),l=Math.abs(a.bbox[1]-a.bbox[3]),h=Math.min(e/2,l/2);if(a.max_radial_length>h)throw new Error("max_radial_length is greater than the radius of the bbox");const u=[a.bbox[0]+a.max_radial_length,a.bbox[1]+a.max_radial_length,a.bbox[2]-a.max_radial_length,a.bbox[3]-a.max_radial_length],x=[];for(let n=0;n<t;n++){let t=[];const n=[...Array(a.num_vertices+1)].map(Math.random);n.forEach(((t,a,n)=>{n[a]=a>0?t+n[a-1]:t})),n.forEach((r=>{r=2*r*Math.PI/n[n.length-1];const o=Math.random();t.push([o*(a.max_radial_length||10)*Math.sin(r),o*(a.max_radial_length||10)*Math.cos(r)])})),t[t.length-1]=t[0],t=t.reverse().map(m(i(u))),x.push(o([t]))}return n(x)}function s(t,a={}){if(!e(a=a||{}))throw new Error("options is invalid");const o=a.bbox;b(o);let h=a.num_vertices,u=a.max_length,x=a.max_rotation;null==t&&(t=1),(!r(h)||void 0===h||h<2)&&(h=10),r(u)&&void 0!==u||(u=1e-4),r(x)&&void 0!==x||(x=Math.PI/8);const s=[];for(let a=0;a<t;a++){const t=[i(o)];for(let a=0;a<h-1;a++){const n=(0===a?2*Math.random()*Math.PI:Math.tan((t[a][1]-t[a-1][1])/(t[a][0]-t[a-1][0])))+(Math.random()-.5)*x*2,r=Math.random()*u;t.push([t[a][0]+r*Math.cos(n),t[a][1]+r*Math.sin(n)])}s.push(l(t))}return n(s)}function m(t){return a=>[a[0]+t[0],a[1]+t[1]]}function _(){return Math.random()-.5}function d(t){return[Math.random()*(t[2]-t[0])+t[0],Math.random()*(t[3]-t[1])+t[1]]}export{s as randomLineString,u as randomPoint,x as randomPolygon,h as randomPosition};export default null;
