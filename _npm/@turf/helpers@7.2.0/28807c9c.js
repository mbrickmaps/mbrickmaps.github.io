/**
 * Bundled by jsDelivr using Rollup v2.79.2 and Terser v5.37.0.
 * Original file: /npm/@turf/helpers@7.2.0/dist/esm/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var r=6371008.8,e={centimeters:637100880,centimetres:637100880,degrees:360/(2*Math.PI),feet:20902260.511392,inches:39.37*r,kilometers:6371.0088,kilometres:6371.0088,meters:r,metres:r,miles:3958.761333810546,millimeters:6371008800,millimetres:6371008800,nauticalmiles:r/1852,radians:1,yards:6967335.223679999},t={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,hectares:1e-4,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:386e-9,nauticalmiles:2.9155334959812285e-7,millimeters:1e6,millimetres:1e6,yards:1.195990046};function n(r,e,t={}){const n={type:"Feature"};return(0===t.id||t.id)&&(n.id=t.id),t.bbox&&(n.bbox=t.bbox),n.properties=e||{},n.geometry=r,n}function o(r,e,t={}){switch(r){case"Point":return i(e).geometry;case"LineString":return l(e).geometry;case"Polygon":return u(e).geometry;case"MultiPoint":return h(e).geometry;case"MultiLineString":return f(e).geometry;case"MultiPolygon":return w(e).geometry;default:throw new Error(r+" is invalid")}}function i(r,e,t={}){if(!r)throw new Error("coordinates is required");if(!Array.isArray(r))throw new Error("coordinates must be an Array");if(r.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!k(r[0])||!k(r[1]))throw new Error("coordinates must contain numbers");return n({type:"Point",coordinates:r},e,t)}function s(r,e,t={}){return m(r.map((r=>i(r,e))),t)}function u(r,e,t={}){for(const e of r){if(e.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");if(e[e.length-1].length!==e[0].length)throw new Error("First and last Position are not equivalent.");for(let r=0;r<e[e.length-1].length;r++)if(e[e.length-1][r]!==e[0][r])throw new Error("First and last Position are not equivalent.")}return n({type:"Polygon",coordinates:r},e,t)}function a(r,e,t={}){return m(r.map((r=>u(r,e))),t)}function l(r,e,t={}){if(r.length<2)throw new Error("coordinates must be an array of two or more positions");return n({type:"LineString",coordinates:r},e,t)}function c(r,e,t={}){return m(r.map((r=>l(r,e))),t)}function m(r,e={}){const t={type:"FeatureCollection"};return e.id&&(t.id=e.id),e.bbox&&(t.bbox=e.bbox),t.features=r,t}function f(r,e,t={}){return n({type:"MultiLineString",coordinates:r},e,t)}function h(r,e,t={}){return n({type:"MultiPoint",coordinates:r},e,t)}function w(r,e,t={}){return n({type:"MultiPolygon",coordinates:r},e,t)}function b(r,e,t={}){return n({type:"GeometryCollection",geometries:r},e,t)}function y(r,e=0){if(e&&!(e>=0))throw new Error("precision must be a positive number");const t=Math.pow(10,e||0);return Math.round(r*t)/t}function d(r,t="kilometers"){const n=e[t];if(!n)throw new Error(t+" units is invalid");return r*n}function g(r,t="kilometers"){const n=e[t];if(!n)throw new Error(t+" units is invalid");return r/n}function p(r,e){return x(g(r,e))}function E(r){let e=r%360;return e<0&&(e+=360),e}function P(r){return(r%=360)>180?r-360:r<-180?r+360:r}function x(r){return 180*(r%(2*Math.PI))/Math.PI}function v(r){return r%360*Math.PI/180}function M(r,e="kilometers",t="kilometers"){if(!(r>=0))throw new Error("length must be a positive number");return d(g(r,e),t)}function A(r,e="meters",n="kilometers"){if(!(r>=0))throw new Error("area must be a positive number");const o=t[e];if(!o)throw new Error("invalid original units");const i=t[n];if(!i)throw new Error("invalid final units");return r/o*i}function k(r){return!isNaN(r)&&null!==r&&!Array.isArray(r)}function q(r){return null!==r&&"object"==typeof r&&!Array.isArray(r)}function L(r){if(!r)throw new Error("bbox is required");if(!Array.isArray(r))throw new Error("bbox must be an Array");if(4!==r.length&&6!==r.length)throw new Error("bbox must be an Array of 4 or 6 numbers");r.forEach((r=>{if(!k(r))throw new Error("bbox must only contain numbers")}))}function F(r){if(!r)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof r))throw new Error("id must be a number or a string")}export{t as areaFactors,P as azimuthToBearing,E as bearingToAzimuth,A as convertArea,M as convertLength,v as degreesToRadians,r as earthRadius,e as factors,n as feature,m as featureCollection,o as geometry,b as geometryCollection,k as isNumber,q as isObject,p as lengthToDegrees,g as lengthToRadians,l as lineString,c as lineStrings,f as multiLineString,h as multiPoint,w as multiPolygon,i as point,s as points,u as polygon,a as polygons,x as radiansToDegrees,d as radiansToLength,y as round,L as validateBBox,F as validateId};export default null;
