/**
 * Bundled by jsDelivr using Rollup v2.79.1 and Terser v5.19.2.
 * Original file: /npm/geojson-equality-ts@1.0.2/dist/esm/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var e=Object.defineProperty,r=(r,t)=>e(r,"name",{value:t,configurable:!0}),t=class{constructor(e){var r,t,o;this.direction=!1,this.compareProperties=!0,this.precision=10**-(null!=(r=null==e?void 0:e.precision)?r:17),this.direction=null!=(t=null==e?void 0:e.direction)&&t,this.compareProperties=null==(o=null==e?void 0:e.compareProperties)||o}compare(e,r){if(e.type!==r.type)return!1;if(!i(e,r))return!1;switch(e.type){case"Point":return this.compareCoord(e.coordinates,r.coordinates);case"LineString":return this.compareLine(e.coordinates,r.coordinates);case"Polygon":return this.comparePolygon(e,r);case"GeometryCollection":return this.compareGeometryCollection(e,r);case"Feature":return this.compareFeature(e,r);case"FeatureCollection":return this.compareFeatureCollection(e,r);default:if(e.type.startsWith("Multi")){const t=n(e),o=n(r);return t.every((e=>o.some((r=>this.compare(e,r)))))}}return!1}compareCoord(e,r){return e.length===r.length&&e.every(((e,t)=>Math.abs(e-r[t])<this.precision))}compareLine(e,r,t=0,o=!1){if(!i(e,r))return!1;const n=e;let c=r;if(o&&!this.compareCoord(n[0],c[0])){const e=this.fixStartIndex(c,n);if(!e)return!1;c=e}const s=this.compareCoord(n[t],c[t]);return this.direction||s?this.comparePath(n,c):!!this.compareCoord(n[t],c[c.length-(1+t)])&&this.comparePath(n.slice().reverse(),c)}fixStartIndex(e,r){let t,o=-1;for(let t=0;t<e.length;t++)if(this.compareCoord(e[t],r[0])){o=t;break}return o>=0&&(t=[].concat(e.slice(o,e.length),e.slice(1,o+1))),t}comparePath(e,r){return e.every(((e,t)=>this.compareCoord(e,r[t])))}comparePolygon(e,r){if(this.compareLine(e.coordinates[0],r.coordinates[0],1,!0)){const t=e.coordinates.slice(1,e.coordinates.length),o=r.coordinates.slice(1,r.coordinates.length);return t.every((e=>o.some((r=>this.compareLine(e,r,1,!0)))))}return!1}compareGeometryCollection(e,r){return i(e.geometries,r.geometries)&&this.compareBBox(e,r)&&e.geometries.every(((e,t)=>this.compare(e,r.geometries[t])))}compareFeature(e,r){return e.id===r.id&&(!this.compareProperties||s(e.properties,r.properties))&&this.compareBBox(e,r)&&this.compare(e.geometry,r.geometry)}compareFeatureCollection(e,r){return i(e.features,r.features)&&this.compareBBox(e,r)&&e.features.every(((e,t)=>this.compare(e,r.features[t])))}compareBBox(e,r){return Boolean(!e.bbox&&!r.bbox)||!(!e.bbox||!r.bbox)&&this.compareCoord(e.bbox,r.bbox)}};r(t,"GeojsonEquality");var o=t;function i(e,r){return e.coordinates?e.coordinates.length===r.coordinates.length:e.length===r.length}function n(e){return e.coordinates.map((r=>({type:e.type.replace("Multi",""),coordinates:r})))}function c(e,r,t){return new o(t).compare(e,r)}function s(e,r){if(null===e&&null===r)return!0;if(null===e||null===r)return!1;const t=Object.keys(e),o=Object.keys(r);if(t.length!==o.length)return!1;for(var i of t){const t=e[i],o=r[i],n=a(t)&&a(o);if(n&&!s(t,o)||!n&&t!==o)return!1}return!0}r(i,"sameLength"),r(n,"explode"),r(c,"geojsonEquality"),r(s,"equal");var a=r((e=>null!=e&&"object"==typeof e),"isObject"),l=o;export{o as GeojsonEquality,l as default,c as geojsonEquality};
